  FUNCTION fc_post
  (
      wp_url IN VARCHAR2,
      wp_data IN CLOB,
      wp_soap_action VARCHAR2 DEFAULT NULL
  ) 
      RETURN CLOB
  IS
      --
      wl_request  utl_http.req;
      wl_response utl_http.resp;
      wl_buffer   CLOB;
      wl_chunk    VARCHAR2(4000);
      wl_length   NUMBER;
      wl_index    NUMBER;
  BEGIN
  
      wl_index := 1;
      wl_length := NVL(length(wp_data), 0);
      
      dbms_output.put_line('CONNECTING TO: ' || wp_url);
      dbms_output.put_line('REQUEST: ' || wp_data);
  
      -- configure HTTP
      utl_http.set_response_error_check(enable => FALSE);
      utl_http.set_detailed_excp_support(enable => FALSE);
  
      -- send request
      wl_request := utl_http.begin_request(wp_url, 'POST','HTTP/1.0');
      utl_http.set_header(wl_request, 'Content-Type', 'text/xml');
      utl_http.set_header(wl_request, 'Content-Length', wl_length);
      
      IF wp_soap_action IS NOT NULL THEN
        utl_http.set_header(wl_request, 'soapAction', wp_soap_action);
      END IF;
      
      WHILE wl_index <= wl_length LOOP
          utl_http.write_text(wl_request, substr(wp_data, wl_index, 4000));
          wl_index := wl_index + 4000;
      END LOOP;
  
      -- get response
      wl_response := utl_http.get_response(wl_request);
      dbms_lob.createtemporary(wl_buffer, FALSE);
      BEGIN
          LOOP
              utl_http.read_text(wl_response, wl_chunk, 4000);
              dbms_lob.writeappend(wl_buffer, length(wl_chunk), wl_chunk);
          END LOOP;
      EXCEPTION
          WHEN utl_http.end_of_body THEN NULL;
      END;
      utl_http.end_response(wl_response);
      
      dbms_output.put_line('RESPONSE: ' || wl_buffer); 
  
      RETURN wl_buffer;
  
  END fc_post;